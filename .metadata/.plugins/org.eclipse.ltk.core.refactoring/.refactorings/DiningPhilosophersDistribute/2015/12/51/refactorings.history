<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Rename local variable &apos;nameOthertable&apos; in &apos;DiningPhilosophersDistribute.Philosopher.run()&apos; to &apos;nameAnotherTable&apos;&#x0D;&#x0A;- Original project: &apos;DiningPhilosophersDistribute&apos;&#x0D;&#x0A;- Original element: &apos;DiningPhilosophersDistribute.Philosopher.run().nameOthertable&apos;&#x0D;&#x0A;- Renamed element: &apos;nameOthertable&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;nameOthertable&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;DiningPhilosophersDistribute{Philosopher.java[Philosopher~run@nameOthertable!5084!5167!5091!5104!QString;!0!false" name="nameAnotherTable" references="true" stamp="1450201191430" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;DiningPhilosophersDistribute.Table.reserveForkRight(...)&apos; to &apos;reserveFork&apos;&#x0D;&#x0A;- Original project: &apos;DiningPhilosophersDistribute&apos;&#x0D;&#x0A;- Original element: &apos;DiningPhilosophersDistribute.Table.reserveForkRight(...)&apos;&#x0D;&#x0A;- Renamed element: &apos;DiningPhilosophersDistribute.Table.reserveFork(...)&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;reserveForkRight&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;DiningPhilosophersDistribute{Table.java[Table~reserveForkRight~QFork;~QPhilosopher;" name="reserveFork" references="true" stamp="1450214157774" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;DiningPhilosophersDistribute.Table.unblockForkRight(...)&apos; to &apos;unblockFork&apos;&#x0D;&#x0A;- Original project: &apos;DiningPhilosophersDistribute&apos;&#x0D;&#x0A;- Original element: &apos;DiningPhilosophersDistribute.Table.unblockForkRight(...)&apos;&#x0D;&#x0A;- Renamed element: &apos;DiningPhilosophersDistribute.Table.unblockFork(...)&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;unblockForkRight&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;DiningPhilosophersDistribute{Table.java[Table~unblockForkRight~QFork;~QPhilosopher;" name="unblockFork" references="true" stamp="1450215502493" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private boolean tryToEat(final Philosopher philosopher, Seat seat)&apos; from &apos;DiningPhilosophersDistribute.Table.tryToEat()&apos; to &apos;DiningPhilosophersDistribute.Table&apos;&#x0D;&#x0A;- Original project: &apos;DiningPhilosophersDistribute&apos;&#x0D;&#x0A;- Method name: &apos;tryToEat&apos;&#x0D;&#x0A;- Destination type: &apos;DiningPhilosophersDistribute.Table&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;tryToEat&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;DiningPhilosophersDistribute{Table.java" name="tryToEat" replace="false" selection="4729 866" stamp="1450264162197" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Rename method &apos;DiningPhilosophersDistribute.ITable.addPhilosopherToQueue(...)&apos; to &apos;queueUpAndTryToEat&apos;&#x0D;&#x0A;- Original project: &apos;DiningPhilosophersDistribute&apos;&#x0D;&#x0A;- Original element: &apos;DiningPhilosophersDistribute.ITable.addPhilosopherToQueue(...)&apos;&#x0D;&#x0A;- Renamed element: &apos;DiningPhilosophersDistribute.ITable.queueUpAndTryToEat(...)&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;addPhilosopherToQueue&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;DiningPhilosophersDistribute{ITable.java[ITable~addPhilosopherToQueue~QPhilosopher;" name="queueUpAndTryToEat" references="true" stamp="1450264299337" version="1.0"/>&#x0A;&#x0A;<refactoring comment="Extract method &apos;private void extracted()&apos; from &apos;DiningPhilosophersDistribute.Philosopher.run()&apos; to &apos;DiningPhilosophersDistribute.Philosopher&apos;&#x0D;&#x0A;- Original project: &apos;DiningPhilosophersDistribute&apos;&#x0D;&#x0A;- Method name: &apos;extracted&apos;&#x0D;&#x0A;- Destination type: &apos;DiningPhilosophersDistribute.Philosopher&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;&#x0D;&#x0A;- Replace occurrences of statements with method" comments="false" description="Extract method &apos;extracted&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;DiningPhilosophersDistribute{Philosopher.java" name="extracted" replace="true" selection="5638 100" stamp="1450266313720" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private void extracted()&apos; from &apos;DiningPhilosophersDistribute.Philosopher.run()&apos; to &apos;DiningPhilosophersDistribute.Philosopher&apos;&#x0D;&#x0A;- Original project: &apos;DiningPhilosophersDistribute&apos;&#x0D;&#x0A;- Method name: &apos;extracted&apos;&#x0D;&#x0A;- Destination type: &apos;DiningPhilosophersDistribute.Philosopher&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;extracted&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;DiningPhilosophersDistribute{Philosopher.java" name="extracted" replace="false" selection="5615 624" stamp="1450266428224" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private boolean extracted(boolean wasSuccessful)&apos; from &apos;DiningPhilosophersDistribute.Philosopher.run()&apos; to &apos;DiningPhilosophersDistribute.Philosopher&apos;&#x0D;&#x0A;- Original project: &apos;DiningPhilosophersDistribute&apos;&#x0D;&#x0A;- Method name: &apos;extracted&apos;&#x0D;&#x0A;- Destination type: &apos;DiningPhilosophersDistribute.Philosopher&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;extracted&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;DiningPhilosophersDistribute{Philosopher.java" name="extracted" replace="false" selection="4239 1297" stamp="1450266471537" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private boolean extracted(boolean wasSuccessful)&apos; from &apos;DiningPhilosophersDistribute.Philosopher.run()&apos; to &apos;DiningPhilosophersDistribute.Philosopher&apos;&#x0D;&#x0A;- Original project: &apos;DiningPhilosophersDistribute&apos;&#x0D;&#x0A;- Method name: &apos;extracted&apos;&#x0D;&#x0A;- Destination type: &apos;DiningPhilosophersDistribute.Philosopher&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;&#x0D;&#x0A;- Replace occurrences of statements with method" comments="false" description="Extract method &apos;extracted&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;DiningPhilosophersDistribute{Philosopher.java" name="extracted" replace="true" selection="3985 173" stamp="1450266493953" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private void extracted()&apos; from &apos;DiningPhilosophersDistribute.Philosopher.run()&apos; to &apos;DiningPhilosophersDistribute.Philosopher&apos;&#x0D;&#x0A;- Original project: &apos;DiningPhilosophersDistribute&apos;&#x0D;&#x0A;- Method name: &apos;extracted&apos;&#x0D;&#x0A;- Destination type: &apos;DiningPhilosophersDistribute.Philosopher&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;extracted&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;DiningPhilosophersDistribute{Philosopher.java" name="extracted" replace="false" selection="3226 647" stamp="1450266514433" version="1.0" visibility="2"/>
</session>